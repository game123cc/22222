// storage.js

// üî• –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Firebase
const firebaseConfig = {
  apiKey: "–¢–í–û–ô_API_KEY",
  authDomain: "–¢–í–û–ô_–ü–†–û–ï–ö–¢.firebaseapp.com",
  databaseURL: "https://–¢–í–û–ô_–ü–†–û–ï–ö–¢.firebaseio.com",
  projectId: "–¢–í–û–ô_–ü–†–û–ï–ö–¢",
  storageBucket: "–¢–í–û–ô_–ü–†–û–ï–ö–¢.appspot.com",
  messagingSenderId: "XXX",
  appId: "1:XXX:web:XXX"
};

if (!window.firebaseApp) {
  firebase.initializeApp(firebaseConfig);
  window.firebaseApp = true;
}
const db = firebase.database();

// --- –†–∞–±–æ—Ç–∞ —Å –∫–æ–º–Ω–∞—Ç–∞–º–∏ ---
const Storage = {
  async getRooms() {
    const snapshot = await db.ref("rooms").once("value");
    const data = snapshot.val();
    return data ? Object.values(data) : [];
  },

  async saveRooms(rooms) {
    const updates = {};
    rooms.forEach(r => updates[r.name] = r);
    await db.ref("rooms").set(updates);
  },

  async addRoom(room) {
    await db.ref("rooms/" + room.name).set(room);
  },

  async updateRoom(room) {
    await db.ref("rooms/" + room.name).update(room);
  },

  async clearRooms() {
    await db.ref("rooms").remove();
  },

  // --- –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ ---
  getCurrentRoom() {
    return localStorage.getItem("currentRoom");
  },
  setCurrentRoom(name) {
    localStorage.setItem("currentRoom", name);
  },

  // --- –†–∞–±–æ—Ç–∞ —Å –Ω–∏–∫–æ–º ---
  setNickname(nickname) {
    localStorage.setItem("nickname", nickname);
  },
  getNickname() {
    return localStorage.getItem("nickname") || "username";
  },
  clearNickname() {
    localStorage.removeItem("nickname");
  }
};


